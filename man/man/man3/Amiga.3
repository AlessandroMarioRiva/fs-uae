.TH "Amiga" 3 "Thu Aug 23 2012" "Version 1.0" "FS-UAE Gui for Linux OS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Amiga \- 
.PP
This class is responsible for the magement of FS-UAE Gui\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <amiga\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAmiga\fP (QWidget *parent=0)"
.br
.ti -1c
.RI "\fB~Amiga\fP ()"
.br
.in -1c
.SS "Private Slots"

.in +1c
.ti -1c
.RI "void \fBon_saveConfigToolButton_clicked\fP ()"
.br
.RI "\fISave configuration\&. \fP"
.ti -1c
.RI "void \fBon_loadConfigToolButton_clicked\fP ()"
.br
.RI "\fILoad configuration\&. \fP"
.ti -1c
.RI "void \fBon_loadDefaultValuesToolButton_clicked\fP ()"
.br
.RI "\fIReset configuration\&. \fP"
.ti -1c
.RI "void \fBon_runConfigButton_clicked\fP ()"
.br
.RI "\fIRun FS-UAE\&. \fP"
.ti -1c
.RI "void \fBon_actionAmiga_triggered\fP ()"
.br
.RI "\fIHelp menu: what's \fBAmiga\fP? \fP"
.ti -1c
.RI "void \fBon_actionSummary_triggered\fP ()"
.br
.RI "\fIHelp menu: a brief summary\&. \fP"
.ti -1c
.RI "void \fBon_actionReport_bug_triggered\fP ()"
.br
.RI "\fIHelp menu: open an email browser to report bug\&. \fP"
.ti -1c
.RI "void \fBon_kickstartFileToolButton_clicked\fP ()"
.br
.RI "\fILoad Kickstart file\&. \fP"
.ti -1c
.RI "void \fBon_kickstartExtFileToolButton_clicked\fP ()"
.br
.RI "\fILoad Extended Kickstart file\&. \fP"
.ti -1c
.RI "void \fBon_amigaModelComboBox_currentIndexChanged\fP (const QString &arg1)"
.br
.RI "\fIList of avaiable \fBAmiga\fP models\&. \fP"
.ti -1c
.RI "void \fBon_accuracyLeastRadio_clicked\fP ()"
.br
.RI "\fISwitch to least accuracy\&. \fP"
.ti -1c
.RI "void \fBon_accuracyNormalRadio_clicked\fP ()"
.br
.RI "\fISwitch to normal accuracy\&. \fP"
.ti -1c
.RI "void \fBon_accuracyMostadio_clicked\fP ()"
.br
.RI "\fISwitch to most accuracy\&. \fP"
.ti -1c
.RI "void \fBon_videoModePALRadio_clicked\fP ()"
.br
.RI "\fISwitch to PAL video mode\&. \fP"
.ti -1c
.RI "void \fBon_videoModeNTSCRadio_clicked\fP ()"
.br
.RI "\fISwitch to NTST video mode\&. \fP"
.ti -1c
.RI "void \fBon_chipMem4MbRadio_clicked\fP ()"
.br
.RI "\fIChip memory setting at 4Mb\&. \fP"
.ti -1c
.RI "void \fBon_chipMeme8MbRadio_clicked\fP ()"
.br
.RI "\fIChip memory setting at 8Mb\&. \fP"
.ti -1c
.RI "void \fBon_chipMem512KbRadio_clicked\fP ()"
.br
.RI "\fIChip memory setting at 512Kb\&. \fP"
.ti -1c
.RI "void \fBon_chipMem1MbRadio_clicked\fP ()"
.br
.RI "\fIChip memory setting at 1Mb\&. \fP"
.ti -1c
.RI "void \fBon_chipMem2MbRadio_clicked\fP ()"
.br
.RI "\fIChip memory setting at 2Mb\&. \fP"
.ti -1c
.RI "void \fBon_slowMemNoneRadio_clicked\fP ()"
.br
.RI "\fINone slow memory\&. \fP"
.ti -1c
.RI "void \fBon_slowMem512KbRadio_clicked\fP ()"
.br
.RI "\fISlow memory setting at 512kb\&. \fP"
.ti -1c
.RI "void \fBon_slowMem1MbRadio_clicked\fP ()"
.br
.RI "\fISlow memory setting at 1Mb\&. \fP"
.ti -1c
.RI "void \fBon_slowMem1_8MbRadio_clicked\fP ()"
.br
.RI "\fISlow memory setting at 1\&.8Mb\&. \fP"
.ti -1c
.RI "void \fBon_fastMemNoneRadio_clicked\fP ()"
.br
.RI "\fINone fast memory\&. \fP"
.ti -1c
.RI "void \fBon_fastMem1MbRadio_clicked\fP ()"
.br
.RI "\fIFast memory setting at 1Mb\&. \fP"
.ti -1c
.RI "void \fBon_fastMem2MbRadio_clicked\fP ()"
.br
.RI "\fIFast memory setting at 2Mb\&. \fP"
.ti -1c
.RI "void \fBon_fastMem4MbRadio_clicked\fP ()"
.br
.RI "\fIFast memory setting at 4Mb\&. \fP"
.ti -1c
.RI "void \fBon_fastMem8MbRadio_clicked\fP ()"
.br
.RI "\fIFast memory setting at 8Mb\&. \fP"
.ti -1c
.RI "void \fBon_z3MemNoneRadio_clicked\fP ()"
.br
.RI "\fINone Zorro III memory\&. \fP"
.ti -1c
.RI "void \fBon_z3Mem1MbRadio_clicked\fP ()"
.br
.RI "\fIZorro III memory setting at 1Mb\&. \fP"
.ti -1c
.RI "void \fBon_z3Mem2MbRadio_clicked\fP ()"
.br
.RI "\fIZorro III memory setting at 2Mb\&. \fP"
.ti -1c
.RI "void \fBon_z3Mem4MbRadio_clicked\fP ()"
.br
.RI "\fIZorro III memory setting at 4Mb\&. \fP"
.ti -1c
.RI "void \fBon_z3Mem8MbRadio_clicked\fP ()"
.br
.RI "\fIZorro III memory setting at 8Mb\&. \fP"
.ti -1c
.RI "void \fBon_z3Mem16MbRadio_clicked\fP ()"
.br
.RI "\fIZorro III memory setting at 16Mb\&. \fP"
.ti -1c
.RI "void \fBon_z3Mem32MbRadio_clicked\fP ()"
.br
.RI "\fIZorro III memory setting at 32Mb\&. \fP"
.ti -1c
.RI "void \fBon_z3Mem64MbRadio_clicked\fP ()"
.br
.RI "\fIZorro III memory setting at 64Mb\&. \fP"
.ti -1c
.RI "void \fBon_z3Mem128MbRadio_clicked\fP ()"
.br
.RI "\fIZorro III memory setting at 128Mb\&. \fP"
.ti -1c
.RI "void \fBon_z3Mem256MbRadio_clicked\fP ()"
.br
.RI "\fIZorro III memory setting at 256Mb\&. \fP"
.ti -1c
.RI "void \fBon_floppyDrive0ToolButton_clicked\fP ()"
.br
.RI "\fILoad Floppy in Drive 0\&. \fP"
.ti -1c
.RI "void \fBon_floppyDrive1ToolButton_clicked\fP ()"
.br
.RI "\fILoad Floppy in Drive 1\&. \fP"
.ti -1c
.RI "void \fBon_floppyDrive2ToolButton_clicked\fP ()"
.br
.RI "\fILoad Floppy in Dirve 2\&. \fP"
.ti -1c
.RI "void \fBon_floppyDrive3ToolButton_clicked\fP ()"
.br
.RI "\fILoad Floppy in Drive 3\&. \fP"
.ti -1c
.RI "void \fBon_floppySwappingImagesAddPushButton_clicked\fP ()"
.br
.RI "\fIAdd Floppy image(s) in Swapping area\&. \fP"
.ti -1c
.RI "void \fBon_floppySwappingImagerRemovePushButton_clicked\fP ()"
.br
.RI "\fIRemove floppy image(s) from swapping area\&. \fP"
.ti -1c
.RI "void \fBon_floppyDriveVolumeSlider_valueChanged\fP (int value)"
.br
.RI "\fIChange floppy drive volume (slider)\&. \fP"
.ti -1c
.RI "void \fBon_floppyDriveVolumeMuteCheckBox_clicked\fP ()"
.br
.RI "\fIMute floppy drive volume\&. \fP"
.ti -1c
.RI "void \fBon_floppyDriveSpeedSlider_valueChanged\fP (int position)"
.br
.RI "\fIChange floppy dirve speed (slider)\&. \fP"
.ti -1c
.RI "void \fBon_cdromDrive0ToolButton_clicked\fP ()"
.br
.RI "\fILoad CD-ROM in Drive 0\&. \fP"
.ti -1c
.RI "void \fBon_cdromSwappingImagesAddPushButton_clicked\fP ()"
.br
.RI "\fIAdd CD-ROM(s) in Swapping area\&. \fP"
.ti -1c
.RI "void \fBon_cdromSwappingImagesRemovePushButton_clicked\fP ()"
.br
.RI "\fIRemove CD-ROM(s) from Swapping area\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive0FolderToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disk Folder in Drive 0\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive0ToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disks in Drive 0\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive1ToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disks in Drive 1\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive1FolderToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disk Folder in Drive 1\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive2ToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disks in Drive 2\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive2FolderToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disk Folder in Drive 2\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive3ToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disks in Drive 3\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive3FolderToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disk Folder in Drive 3\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive4FolderToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disk Folder in Drive 4\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive4ToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disks in Drive 4\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive5ToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disks in Drive 5\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive5FolderToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disk Folder in Drive 5\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive6ToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disks in Drive 6\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive6FolderToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disk Folder in Drive 6\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive7ToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disks in Drive 7\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive7FolderToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disk Folder in Drive 7\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive8ToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disks in Drive 8\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive8FolderToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disk Folder in Drive 8\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive9ToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disks in Drive 9\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive9FolderToolButton_clicked\fP ()"
.br
.RI "\fILoad Hard Disk Folder in Drive 9\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive0LabelLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange label of Hard Disk stored in Drive 0\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive1LabelLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange label of Hard Disk stored in Drive 1\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive2LabelLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange label of Hard Disk stored in Drive 2\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive3LabelLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange label of Hard Disk stored in Drive 3\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive4LabelLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange label of Hard Disk stored in Drive 4\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive5LabelLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange label of Hard Disk stored in Drive 5\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive6LabelLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange label of Hard Disk stored in Drive 6\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive7LabelLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange label of Hard Disk stored in Drive 7\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive8LabelLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange label of Hard Disk stored in Drive 8\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive9LabelLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange label of Hard Disk stored in Drive 9\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive0ReadOnlyCheckBox_clicked\fP ()"
.br
.RI "\fISet hard drive 0 as Read Only\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive1ReadOnlyCheckBox_clicked\fP ()"
.br
.RI "\fISet hard drive 1 as Read Only\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive2ReadOnlyCheckBox_clicked\fP ()"
.br
.RI "\fISet hard drive 2 as Read Only\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive3ReadOnlyCheckBox_clicked\fP ()"
.br
.RI "\fISet hard drive 3 as Read Only\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive4ReadOnlyCheckBox_clicked\fP ()"
.br
.RI "\fISet hard drive 4 as Read Only\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive5ReadOnlyCheckBox_clicked\fP ()"
.br
.RI "\fISet hard drive 5 as Read Only\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive6ReadOnlyCheckBox_clicked\fP ()"
.br
.RI "\fISet hard drive 6 as Read Only\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive7ReadOnlyCheckBox_clicked\fP ()"
.br
.RI "\fISet hard drive 7 as Read Only\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive8ReadOnlyCheckBox_clicked\fP ()"
.br
.RI "\fISet hard drive 8 as Read Only\&. \fP"
.ti -1c
.RI "void \fBon_hardDrive9ReadOnlyCheckBox_clicked\fP ()"
.br
.RI "\fISet hard drive 9 as Read Only\&. \fP"
.ti -1c
.RI "void \fBon_displaySettingsStartFullscreenRadioButton_clicked\fP ()"
.br
.RI "\fIStart emulation in fulscreen mode\&. \fP"
.ti -1c
.RI "void \fBon_displaySettingsResizableRadioButton_clicked\fP ()"
.br
.RI "\fIDisable resizing of emulation window\&. \fP"
.ti -1c
.RI "void \fBon_displaySettingsKeepAspectRatioRadioButton_clicked\fP ()"
.br
.RI "\fIEnable keep aspect ratio\&. \fP"
.ti -1c
.RI "void \fBon_scanlinesRadioButton_clicked\fP ()"
.br
.RI "\fIEnable scanlines\&. \fP"
.ti -1c
.RI "void \fBon_scanlinesRTGRadioButton_clicked\fP ()"
.br
.RI "\fIEnable RTG scanlines\&. \fP"
.ti -1c
.RI "void \fBon_lowResolutionRadioButton_clicked\fP ()"
.br
.RI "\fIStart emulatio with low resolution\&. \fP"
.ti -1c
.RI "void \fBon_lineDoublingRadioButton_clicked\fP ()"
.br
.RI "\fIEnable line doubling\&. \fP"
.ti -1c
.RI "void \fBon_fullscreenResolutionXSpinBox_valueChanged\fP (const QString &arg1)"
.br
.RI "\fIChange X-resolution in fullscreen mode\&. \fP"
.ti -1c
.RI "void \fBon_fullscreenResolutionYSpinBox_valueChanged\fP (const QString &arg1)"
.br
.RI "\fIChange Y-resolution in fullscreen mode\&. \fP"
.ti -1c
.RI "void \fBon_windowResolutionXSpinBox_valueChanged\fP (const QString &arg1)"
.br
.RI "\fIChange X-resolution in window mode\&. \fP"
.ti -1c
.RI "void \fBon_windowResolutionYSpinBox_valueChanged\fP (const QString &arg1)"
.br
.RI "\fIChange Y-resolution in window mode\&. \fP"
.ti -1c
.RI "void \fBon_scaleXDoubleSpinBox_valueChanged\fP (const QString &arg1)"
.br
.RI "\fIChange X-scale\&. \fP"
.ti -1c
.RI "void \fBon_scaleYDoubleSpinBox_valueChanged\fP (const QString &arg1)"
.br
.RI "\fIChange Y-scale\&. \fP"
.ti -1c
.RI "void \fBon_alignXdoubleSpinBox_valueChanged\fP (const QString &arg1)"
.br
.RI "\fIChange X-alignment\&. \fP"
.ti -1c
.RI "void \fBon_alignYDoubleSpinBox_valueChanged\fP (const QString &arg1)"
.br
.RI "\fIChange Y-alignment\&. \fP"
.ti -1c
.RI "void \fBon_scanlinesDarkHorizontalSlider_valueChanged\fP (int position)"
.br
.RI "\fIChange scanlines dark\&. \fP"
.ti -1c
.RI "void \fBon_scanlinesLightHorizontalSlider_valueChanged\fP (int position)"
.br
.RI "\fIChange scanline light\&. \fP"
.ti -1c
.RI "void \fBon_fullSceneAntiAliasingOffRadioButton_clicked\fP ()"
.br
.RI "\fIDisable fullScene anti-aliasing mode\&. \fP"
.ti -1c
.RI "void \fBon_fullSceneAntiAliasing2xRadioButton_clicked\fP ()"
.br
.RI "\fIEnable 2x fullScene anti-aliasing mode\&. \fP"
.ti -1c
.RI "void \fBon_fullSceneAntiAliasing4xRadioButton_clicked\fP ()"
.br
.RI "\fIEnable 4x fullScene anti-aliasing mode\&. \fP"
.ti -1c
.RI "void \fBon_fullSceneAntiAliasing8xRadioButton_clicked\fP ()"
.br
.RI "\fIEnable 8x fullScene anti-aliasing mode\&. \fP"
.ti -1c
.RI "void \fBon_textureFilterLinearRadioButton_clicked\fP ()"
.br
.RI "\fIApply a linear filter on the texture\&. \fP"
.ti -1c
.RI "void \fBon_textureFilterNearestRadioButton_clicked\fP ()"
.br
.RI "\fIApply a nearest filter on the texture\&. \fP"
.ti -1c
.RI "void \fBon_f11InitalModeAutoRadioButton_clicked\fP ()"
.br
.RI "\fISetting F11 initial mode as automatic\&. \fP"
.ti -1c
.RI "void \fBon_f11InitalModeFullRadioButton_clicked\fP ()"
.br
.RI "\fISetting F11 initial mode as fullscreen\&. \fP"
.ti -1c
.RI "void \fBon_f11InitalMode640x400RadioButton_clicked\fP ()"
.br
.RI "\fISetting F11 initial mode as 640x400 px\&. \fP"
.ti -1c
.RI "void \fBon_f11InitalMode640x480RadioButton_clicked\fP ()"
.br
.RI "\fISetting F11 initial mode as 640x480 px\&. \fP"
.ti -1c
.RI "void \fBon_f11InitalMode640x512RadioButton_clicked\fP ()"
.br
.RI "\fISetting F11 initial mode as 640x512 px\&. \fP"
.ti -1c
.RI "void \fBon_f11InitialModeWithBorderCheckBox_clicked\fP ()"
.br
.RI "\fIEnable border in F11 initial mode\&. \fP"
.ti -1c
.RI "void \fBon_videoFormatBGRARadioButton_clicked\fP ()"
.br
.RI "\fISetting video format as BRGA\&. \fP"
.ti -1c
.RI "void \fBon_videoFormatRGBARadioButton_clicked\fP ()"
.br
.RI "\fISetting video format as RBGA\&. \fP"
.ti -1c
.RI "void \fBon_textureFormatModeRGBRadioButton_clicked\fP ()"
.br
.RI "\fISetting video texture as RGB\&. \fP"
.ti -1c
.RI "void \fBon_textureFormatModeRGB8RadioButton_clicked\fP ()"
.br
.RI "\fISetting video texture as RGB8\&. \fP"
.ti -1c
.RI "void \fBon_textureFormatModeRGBARadioButton_clicked\fP ()"
.br
.RI "\fISetting video texture as RGBA\&. \fP"
.ti -1c
.RI "void \fBon_textureFormatModeRGBA8RadioButton_clicked\fP ()"
.br
.RI "\fISetting vide texture as RGBA8\&. \fP"
.ti -1c
.RI "void \fBon_shaderComboBox_currentIndexChanged\fP (const QString &arg1)"
.br
.RI "\fIA list of type of shader\&. \fP"
.ti -1c
.RI "void \fBon_videoSyncComboBox_currentIndexChanged\fP (const QString &arg1)"
.br
.RI "\fIA list of type of video syncronization\&. \fP"
.ti -1c
.RI "void \fBon_videoSynkMethodeComboBox_currentIndexChanged\fP (const QString &arg1)"
.br
.RI "\fIA list of method of video syncronization\&. \fP"
.ti -1c
.RI "void \fBon_alternativeBaseDirPushButton_clicked\fP ()"
.br
.RI "\fIExplore system for an Alternative Base directory\&. \fP"
.ti -1c
.RI "void \fBon_alternativeKickstartDirPushButton_clicked\fP ()"
.br
.RI "\fIExplore system for an Alternative Kickstart directory\&. \fP"
.ti -1c
.RI "void \fBon_alernativeSaveStatesDirPushButton_clicked\fP ()"
.br
.RI "\fIExplore system for an Alternative SaveStates directory\&. \fP"
.ti -1c
.RI "void \fBon_alternativeFloppyOverlaysDirPushButton_clicked\fP ()"
.br
.RI "\fIExplore system for an Alternative FloppyOverlay directory\&. \fP"
.ti -1c
.RI "void \fBon_alternativeFlashMemoryDirPushButton_clicked\fP ()"
.br
.RI "\fIExplore system for an Alternative FlashMemory directory\&. \fP"
.ti -1c
.RI "void \fBon_alternativeControllersDirPushButton_clicked\fP ()"
.br
.RI "\fIExplore system for an Alternative Controllers directory\&. \fP"
.ti -1c
.RI "void \fBon_alternativeLogsDirPushButton_clicked\fP ()"
.br
.RI "\fIExplore system for an Alternative Logs directory\&. \fP"
.ti -1c
.RI "void \fBon_alternativeHardDrivesDirPushButton_clicked\fP ()"
.br
.RI "\fIExplore system for an Alternative HardDrivers directory\&. \fP"
.ti -1c
.RI "void \fBon_alternativeCdromsDirPushButton_clicked\fP ()"
.br
.RI "\fIExplore system for an Alternative Cdroms directory\&. \fP"
.ti -1c
.RI "void \fBon_alternativeFloppiesDirPushButton_clicked\fP ()"
.br
.RI "\fIExplore system for an Alternative Floppies directory\&. \fP"
.ti -1c
.RI "void \fBon_grabMouseCheckBox_clicked\fP ()"
.br
.RI "\fIDisable grabbing mouse\&. \fP"
.ti -1c
.RI "void \fBon_grabMouseAutoCheckBox_clicked\fP ()"
.br
.RI "\fIDisable automatic grabbing mouse\&. \fP"
.ti -1c
.RI "void \fBon_useBSDCheckBox_clicked\fP ()"
.br
.RI "\fIEnable BSD\&. \fP"
.ti -1c
.RI "void \fBon_audioBufferLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange size of audio buffer\&. \fP"
.ti -1c
.RI "void \fBon_menuTitleLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange menu title\&. \fP"
.ti -1c
.RI "void \fBon_menuSubtitleLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange menu subtitle\&. \fP"
.ti -1c
.RI "void \fBon_serverIPLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIInsert an IP address\&. \fP"
.ti -1c
.RI "void \fBon_serverPortLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIInsert a Internet port\&. \fP"
.ti -1c
.RI "void \fBon_playerUsernameLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChoose a Username\&. \fP"
.ti -1c
.RI "void \fBon_playerPasswordLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChoose a password\&. \fP"
.ti -1c
.RI "void \fBon_fadeColorPushButton_clicked\fP ()"
.br
.RI "\fIChange the fade color\&. \fP"
.ti -1c
.RI "void \fBon_wallColor1PushButton_clicked\fP ()"
.br
.RI "\fIChaneg the first wall color\&. \fP"
.ti -1c
.RI "void \fBon_wallColor2PushButton_clicked\fP ()"
.br
.RI "\fIChange the second wall color\&. \fP"
.ti -1c
.RI "void \fBon_floorColor1PushButton_clicked\fP ()"
.br
.RI "\fIChange the first floor color\&. \fP"
.ti -1c
.RI "void \fBon_floorColor2PushButton_clicked\fP ()"
.br
.RI "\fIChange the second wall color\&. \fP"
.ti -1c
.RI "void \fBon_headColorPushButton_clicked\fP ()"
.br
.RI "\fIChange the head color\&. \fP"
.ti -1c
.RI "void \fBon_themeOverlayImagerPushButton_clicked\fP ()"
.br
.RI "\fIChange the theme overlay image\&. \fP"
.ti -1c
.RI "void \fBon_themeFolderPushButton_clicked\fP ()"
.br
.RI "\fIChange the theme folder\&. \fP"
.ti -1c
.RI "void \fBon_mouseSpeedLineEdit_textChanged\fP (const QString &arg1)"
.br
.RI "\fIChange mouse speed\&. \fP"
.ti -1c
.RI "void \fBcustomJoystick0Slot\fP (QString s)"
.br
.RI "\fICustom slot for joystick 0\&. \fP"
.ti -1c
.RI "void \fBcustomJoystick1Slot\fP (QString s)"
.br
.RI "\fICustom slot for joystick 1\&. \fP"
.ti -1c
.RI "void \fBcustomJoystick2Slot\fP (QString s)"
.br
.RI "\fICustom slot for joystick 2\&. \fP"
.ti -1c
.RI "void \fBcustomJoystick3Slot\fP (QString s)"
.br
.RI "\fICustom slot for joystick 3\&. \fP"
.ti -1c
.RI "void \fBon_readKeyPushButton_clicked\fP ()"
.br
.RI "\fIStart recording keyboard to change a default key\&. \fP"
.ti -1c
.RI "void \fBon_customInputMappingAddPushButton_clicked\fP ()"
.br
.RI "\fIAdd a new different mapping for a key\&. \fP"
.ti -1c
.RI "void \fBon_customInputMappingRemovePushButton_clicked\fP ()"
.br
.RI "\fIRemove a different mapping for a key\&. \fP"
.ti -1c
.RI "void \fBon_joystickPort0CustomizePushButton_clicked\fP ()"
.br
.RI "\fICustomize joystick in port 0\&. \fP"
.ti -1c
.RI "void \fBon_joystickPort0CustomJoystickRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort0JoystickRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort0MouseRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort0KeyboardRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort0NothingRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort0ModelComboBox_currentIndexChanged\fP (const QString &arg1)"
.br
.RI "\fIA list of type of joystick's model\&. \fP"
.ti -1c
.RI "void \fBon_joystickPort1MouseRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort2MouseRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort3MouseRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort1KeyboardRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort2KeyboardRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort3KeyboardRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort1JoystickRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort2JoystickRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort3JoystickRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort1ModelComboBox_currentIndexChanged\fP (const QString &arg1)"
.br
.RI "\fIA list of type of joystick's model\&. \fP"
.ti -1c
.RI "void \fBon_joystickPort2ModelComboBox_currentIndexChanged\fP (const QString &arg1)"
.br
.RI "\fIA list of type of joystick's model\&. \fP"
.ti -1c
.RI "void \fBon_joystickPort3ModelComboBox_currentIndexChanged\fP (const QString &arg1)"
.br
.RI "\fIA list of type of joystick's model\&. \fP"
.ti -1c
.RI "void \fBon_joystickPort1CustomJoystickRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort2CustomJoystickRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort3CustomizePushButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort3CustomJoystickRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort1NothingRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort2NothingRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort3NothingRadioButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort1CusomizePushButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_joystickPort2CustomizePushButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_themeAddViewportPushButton_clicked\fP ()"
.br
.RI "\fIAdd a new viewport\&. \fP"
.ti -1c
.RI "void \fBon_themeRemoveViewportPushButton_clicked\fP ()"
.br
.RI "\fIReport a viewport\&. \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBparseLine\fP (string line)"
.br
.ti -1c
.RI "void \fBcheckConfigurationConsistency\fP ()"
.br
.RI "\fIVerify the consistency of configuration\&. \fP"
.ti -1c
.RI "void \fBsetFastMemoryDisabled\fP (bool state)"
.br
.ti -1c
.RI "void \fBsetZorroIIIMemoryDisabled\fP (bool state)"
.br
.ti -1c
.RI "void \fBupdateGraphicsFromInternalConfiguration\fP ()"
.br
.ti -1c
.RI "void \fBsaveConfigInFile\fP (string fileName)"
.br
.ti -1c
.RI "void \fBloadDefaultValues\fP ()"
.br
.ti -1c
.RI "bool \fBisExistingParameter\fP (string parameterName)"
.br
.ti -1c
.RI "bool \fBeventFilter\fP (QObject *obj, QEvent *event)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "Ui::Amiga * \fBui\fP"
.br
.RI "\fI\fBAmiga\fP main window\&. \fP"
.ti -1c
.RI "\fBConfigChipset\fP \fBchipsetConfiguration\fP"
.br
.RI "\fIChipset configuration tab\&. \fP"
.ti -1c
.RI "\fBConfigRam\fP \fBramConfiguration\fP"
.br
.RI "\fIRAM configuration tab\&. \fP"
.ti -1c
.RI "\fBConfigFloppy\fP \fBfloppyConfiguration\fP"
.br
.RI "\fIFloppy configuration tab\&. \fP"
.ti -1c
.RI "\fBConfigCDRom\fP \fBcdromConfiguration\fP"
.br
.RI "\fICDROM configuraion tab\&. \fP"
.ti -1c
.RI "\fBConfigHardDisks\fP \fBhardDiskConfiguration\fP"
.br
.RI "\fIHard Disks configuration tab\&. \fP"
.ti -1c
.RI "\fBConfigInput\fP \fBinputConfiguration\fP"
.br
.RI "\fIInput configuration tab\&. \fP"
.ti -1c
.RI "\fBConfigGraphics\fP \fBgraphicsConfiguration\fP"
.br
.RI "\fIGraphics configuration tab\&. \fP"
.ti -1c
.RI "\fBConfigTheme\fP \fBthemeConfiguration\fP"
.br
.RI "\fITheme configuration tab\&. \fP"
.ti -1c
.RI "\fBConfigMisc\fP \fBmiscConfiguration\fP"
.br
.RI "\fIMisc configuration tab\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This class is responsible for the magement of FS-UAE Gui\&. 

In this class are defined all the variables for the correct management of all types of settings possible to run FS-UAE\&.
.br
 We have also introduced some secondary features for FS-UAE but not for the end user such as saving and loading configurations, the possibility of refreshing the gui and reporting bugs\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBAmiga::Amiga\fP (QWidget *parent = \fC0\fP)\fC [explicit]\fP"
.SS "\fBAmiga::~Amiga\fP ()"
.SH "Member Function Documentation"
.PP 
.SS "void \fBAmiga::checkConfigurationConsistency\fP ()\fC [private]\fP"
.PP
Verify the consistency of configuration\&. 
.SS "void \fBAmiga::customJoystick0Slot\fP (QStrings)\fC [private, slot]\fP"
.PP
Custom slot for joystick 0\&. 
.SS "void \fBAmiga::customJoystick1Slot\fP (QStrings)\fC [private, slot]\fP"
.PP
Custom slot for joystick 1\&. 
.SS "void \fBAmiga::customJoystick2Slot\fP (QStrings)\fC [private, slot]\fP"
.PP
Custom slot for joystick 2\&. 
.SS "void \fBAmiga::customJoystick3Slot\fP (QStrings)\fC [private, slot]\fP"
.PP
Custom slot for joystick 3\&. 
.SS "bool \fBAmiga::eventFilter\fP (QObject *obj, QEvent *event)\fC [private]\fP"
.SS "bool \fBAmiga::isExistingParameter\fP (stringparameterName)\fC [private]\fP"
.SS "void \fBAmiga::loadDefaultValues\fP ()\fC [private]\fP"
.SS "void \fBAmiga::on_accuracyLeastRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Switch to least accuracy\&. 
.SS "void \fBAmiga::on_accuracyMostadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Switch to most accuracy\&. 
.SS "void \fBAmiga::on_accuracyNormalRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Switch to normal accuracy\&. 
.SS "void \fBAmiga::on_actionAmiga_triggered\fP ()\fC [private, slot]\fP"
.PP
Help menu: what's \fBAmiga\fP? 
.SS "void \fBAmiga::on_actionReport_bug_triggered\fP ()\fC [private, slot]\fP"
.PP
Help menu: open an email browser to report bug\&. 
.SS "void \fBAmiga::on_actionSummary_triggered\fP ()\fC [private, slot]\fP"
.PP
Help menu: a brief summary\&. 
.SS "void \fBAmiga::on_alernativeSaveStatesDirPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Explore system for an Alternative SaveStates directory\&. 
.SS "void \fBAmiga::on_alignXdoubleSpinBox_valueChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change X-alignment\&. 
.SS "void \fBAmiga::on_alignYDoubleSpinBox_valueChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change Y-alignment\&. 
.SS "void \fBAmiga::on_alternativeBaseDirPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Explore system for an Alternative Base directory\&. 
.SS "void \fBAmiga::on_alternativeCdromsDirPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Explore system for an Alternative Cdroms directory\&. 
.SS "void \fBAmiga::on_alternativeControllersDirPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Explore system for an Alternative Controllers directory\&. 
.SS "void \fBAmiga::on_alternativeFlashMemoryDirPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Explore system for an Alternative FlashMemory directory\&. 
.SS "void \fBAmiga::on_alternativeFloppiesDirPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Explore system for an Alternative Floppies directory\&. 
.SS "void \fBAmiga::on_alternativeFloppyOverlaysDirPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Explore system for an Alternative FloppyOverlay directory\&. 
.SS "void \fBAmiga::on_alternativeHardDrivesDirPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Explore system for an Alternative HardDrivers directory\&. 
.SS "void \fBAmiga::on_alternativeKickstartDirPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Explore system for an Alternative Kickstart directory\&. 
.SS "void \fBAmiga::on_alternativeLogsDirPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Explore system for an Alternative Logs directory\&. 
.SS "void \fBAmiga::on_amigaModelComboBox_currentIndexChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
List of avaiable \fBAmiga\fP models\&. 
.SS "void \fBAmiga::on_audioBufferLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change size of audio buffer\&. 
.SS "void \fBAmiga::on_cdromDrive0ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load CD-ROM in Drive 0\&. 
.SS "void \fBAmiga::on_cdromSwappingImagesAddPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Add CD-ROM(s) in Swapping area\&. 
.SS "void \fBAmiga::on_cdromSwappingImagesRemovePushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Remove CD-ROM(s) from Swapping area\&. 
.SS "void \fBAmiga::on_chipMem1MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Chip memory setting at 1Mb\&. 
.SS "void \fBAmiga::on_chipMem2MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Chip memory setting at 2Mb\&. 
.SS "void \fBAmiga::on_chipMem4MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Chip memory setting at 4Mb\&. 
.SS "void \fBAmiga::on_chipMem512KbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Chip memory setting at 512Kb\&. 
.SS "void \fBAmiga::on_chipMeme8MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Chip memory setting at 8Mb\&. 
.SS "void \fBAmiga::on_customInputMappingAddPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Add a new different mapping for a key\&. 
.SS "void \fBAmiga::on_customInputMappingRemovePushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Remove a different mapping for a key\&. 
.SS "void \fBAmiga::on_displaySettingsKeepAspectRatioRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Enable keep aspect ratio\&. 
.SS "void \fBAmiga::on_displaySettingsResizableRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Disable resizing of emulation window\&. 
.SS "void \fBAmiga::on_displaySettingsStartFullscreenRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Start emulation in fulscreen mode\&. 
.SS "void \fBAmiga::on_f11InitalMode640x400RadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting F11 initial mode as 640x400 px\&. 
.SS "void \fBAmiga::on_f11InitalMode640x480RadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting F11 initial mode as 640x480 px\&. 
.SS "void \fBAmiga::on_f11InitalMode640x512RadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting F11 initial mode as 640x512 px\&. 
.SS "void \fBAmiga::on_f11InitalModeAutoRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting F11 initial mode as automatic\&. 
.SS "void \fBAmiga::on_f11InitalModeFullRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting F11 initial mode as fullscreen\&. 
.SS "void \fBAmiga::on_f11InitialModeWithBorderCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Enable border in F11 initial mode\&. 
.SS "void \fBAmiga::on_fadeColorPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Change the fade color\&. 
.SS "void \fBAmiga::on_fastMem1MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Fast memory setting at 1Mb\&. 
.SS "void \fBAmiga::on_fastMem2MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Fast memory setting at 2Mb\&. 
.SS "void \fBAmiga::on_fastMem4MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Fast memory setting at 4Mb\&. 
.SS "void \fBAmiga::on_fastMem8MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Fast memory setting at 8Mb\&. 
.SS "void \fBAmiga::on_fastMemNoneRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
None fast memory\&. 
.SS "void \fBAmiga::on_floorColor1PushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Change the first floor color\&. 
.SS "void \fBAmiga::on_floorColor2PushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Change the second wall color\&. 
.SS "void \fBAmiga::on_floppyDrive0ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Floppy in Drive 0\&. 
.SS "void \fBAmiga::on_floppyDrive1ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Floppy in Drive 1\&. 
.SS "void \fBAmiga::on_floppyDrive2ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Floppy in Dirve 2\&. 
.SS "void \fBAmiga::on_floppyDrive3ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Floppy in Drive 3\&. 
.SS "void \fBAmiga::on_floppyDriveSpeedSlider_valueChanged\fP (intposition)\fC [private, slot]\fP"
.PP
Change floppy dirve speed (slider)\&. 
.SS "void \fBAmiga::on_floppyDriveVolumeMuteCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Mute floppy drive volume\&. 
.SS "void \fBAmiga::on_floppyDriveVolumeSlider_valueChanged\fP (intvalue)\fC [private, slot]\fP"
.PP
Change floppy drive volume (slider)\&. 
.SS "void \fBAmiga::on_floppySwappingImagerRemovePushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Remove floppy image(s) from swapping area\&. 
.SS "void \fBAmiga::on_floppySwappingImagesAddPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Add Floppy image(s) in Swapping area\&. 
.SS "void \fBAmiga::on_fullSceneAntiAliasing2xRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Enable 2x fullScene anti-aliasing mode\&. 
.SS "void \fBAmiga::on_fullSceneAntiAliasing4xRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Enable 4x fullScene anti-aliasing mode\&. 
.SS "void \fBAmiga::on_fullSceneAntiAliasing8xRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Enable 8x fullScene anti-aliasing mode\&. 
.SS "void \fBAmiga::on_fullSceneAntiAliasingOffRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Disable fullScene anti-aliasing mode\&. 
.SS "void \fBAmiga::on_fullscreenResolutionXSpinBox_valueChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change X-resolution in fullscreen mode\&. 
.SS "void \fBAmiga::on_fullscreenResolutionYSpinBox_valueChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change Y-resolution in fullscreen mode\&. 
.SS "void \fBAmiga::on_grabMouseAutoCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Disable automatic grabbing mouse\&. 
.SS "void \fBAmiga::on_grabMouseCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Disable grabbing mouse\&. 
.SS "void \fBAmiga::on_hardDrive0FolderToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disk Folder in Drive 0\&. 
.SS "void \fBAmiga::on_hardDrive0LabelLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change label of Hard Disk stored in Drive 0\&. 
.SS "void \fBAmiga::on_hardDrive0ReadOnlyCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Set hard drive 0 as Read Only\&. 
.SS "void \fBAmiga::on_hardDrive0ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disks in Drive 0\&. 
.SS "void \fBAmiga::on_hardDrive1FolderToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disk Folder in Drive 1\&. 
.SS "void \fBAmiga::on_hardDrive1LabelLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change label of Hard Disk stored in Drive 1\&. 
.SS "void \fBAmiga::on_hardDrive1ReadOnlyCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Set hard drive 1 as Read Only\&. 
.SS "void \fBAmiga::on_hardDrive1ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disks in Drive 1\&. 
.SS "void \fBAmiga::on_hardDrive2FolderToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disk Folder in Drive 2\&. 
.SS "void \fBAmiga::on_hardDrive2LabelLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change label of Hard Disk stored in Drive 2\&. 
.SS "void \fBAmiga::on_hardDrive2ReadOnlyCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Set hard drive 2 as Read Only\&. 
.SS "void \fBAmiga::on_hardDrive2ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disks in Drive 2\&. 
.SS "void \fBAmiga::on_hardDrive3FolderToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disk Folder in Drive 3\&. 
.SS "void \fBAmiga::on_hardDrive3LabelLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change label of Hard Disk stored in Drive 3\&. 
.SS "void \fBAmiga::on_hardDrive3ReadOnlyCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Set hard drive 3 as Read Only\&. 
.SS "void \fBAmiga::on_hardDrive3ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disks in Drive 3\&. 
.SS "void \fBAmiga::on_hardDrive4FolderToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disk Folder in Drive 4\&. 
.SS "void \fBAmiga::on_hardDrive4LabelLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change label of Hard Disk stored in Drive 4\&. 
.SS "void \fBAmiga::on_hardDrive4ReadOnlyCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Set hard drive 4 as Read Only\&. 
.SS "void \fBAmiga::on_hardDrive4ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disks in Drive 4\&. 
.SS "void \fBAmiga::on_hardDrive5FolderToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disk Folder in Drive 5\&. 
.SS "void \fBAmiga::on_hardDrive5LabelLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change label of Hard Disk stored in Drive 5\&. 
.SS "void \fBAmiga::on_hardDrive5ReadOnlyCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Set hard drive 5 as Read Only\&. 
.SS "void \fBAmiga::on_hardDrive5ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disks in Drive 5\&. 
.SS "void \fBAmiga::on_hardDrive6FolderToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disk Folder in Drive 6\&. 
.SS "void \fBAmiga::on_hardDrive6LabelLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change label of Hard Disk stored in Drive 6\&. 
.SS "void \fBAmiga::on_hardDrive6ReadOnlyCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Set hard drive 6 as Read Only\&. 
.SS "void \fBAmiga::on_hardDrive6ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disks in Drive 6\&. 
.SS "void \fBAmiga::on_hardDrive7FolderToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disk Folder in Drive 7\&. 
.SS "void \fBAmiga::on_hardDrive7LabelLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change label of Hard Disk stored in Drive 7\&. 
.SS "void \fBAmiga::on_hardDrive7ReadOnlyCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Set hard drive 7 as Read Only\&. 
.SS "void \fBAmiga::on_hardDrive7ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disks in Drive 7\&. 
.SS "void \fBAmiga::on_hardDrive8FolderToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disk Folder in Drive 8\&. 
.SS "void \fBAmiga::on_hardDrive8LabelLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change label of Hard Disk stored in Drive 8\&. 
.SS "void \fBAmiga::on_hardDrive8ReadOnlyCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Set hard drive 8 as Read Only\&. 
.SS "void \fBAmiga::on_hardDrive8ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disks in Drive 8\&. 
.SS "void \fBAmiga::on_hardDrive9FolderToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disk Folder in Drive 9\&. 
.SS "void \fBAmiga::on_hardDrive9LabelLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change label of Hard Disk stored in Drive 9\&. 
.SS "void \fBAmiga::on_hardDrive9ReadOnlyCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Set hard drive 9 as Read Only\&. 
.SS "void \fBAmiga::on_hardDrive9ToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Hard Disks in Drive 9\&. 
.SS "void \fBAmiga::on_headColorPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Change the head color\&. 
.SS "void \fBAmiga::on_joystickPort0CustomizePushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Customize joystick in port 0\&. 
.SS "void \fBAmiga::on_joystickPort0CustomJoystickRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort0JoystickRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort0KeyboardRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort0ModelComboBox_currentIndexChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
A list of type of joystick's model\&. 
.SS "void \fBAmiga::on_joystickPort0MouseRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort0NothingRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort1CusomizePushButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort1CustomJoystickRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort1JoystickRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort1KeyboardRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort1ModelComboBox_currentIndexChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
A list of type of joystick's model\&. 
.SS "void \fBAmiga::on_joystickPort1MouseRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort1NothingRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort2CustomizePushButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort2CustomJoystickRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort2JoystickRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort2KeyboardRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort2ModelComboBox_currentIndexChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
A list of type of joystick's model\&. 
.SS "void \fBAmiga::on_joystickPort2MouseRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort2NothingRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort3CustomizePushButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort3CustomJoystickRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort3JoystickRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort3KeyboardRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort3ModelComboBox_currentIndexChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
A list of type of joystick's model\&. 
.SS "void \fBAmiga::on_joystickPort3MouseRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_joystickPort3NothingRadioButton_clicked\fP ()\fC [private, slot]\fP"
.SS "void \fBAmiga::on_kickstartExtFileToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Extended Kickstart file\&. 
.SS "void \fBAmiga::on_kickstartFileToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load Kickstart file\&. 
.SS "void \fBAmiga::on_lineDoublingRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Enable line doubling\&. 
.SS "void \fBAmiga::on_loadConfigToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Load configuration\&. 
.SS "void \fBAmiga::on_loadDefaultValuesToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Reset configuration\&. 
.SS "void \fBAmiga::on_lowResolutionRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Start emulatio with low resolution\&. 
.SS "void \fBAmiga::on_menuSubtitleLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change menu subtitle\&. 
.SS "void \fBAmiga::on_menuTitleLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change menu title\&. 
.SS "void \fBAmiga::on_mouseSpeedLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change mouse speed\&. 
.SS "void \fBAmiga::on_playerPasswordLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Choose a password\&. 
.SS "void \fBAmiga::on_playerUsernameLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Choose a Username\&. 
.SS "void \fBAmiga::on_readKeyPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Start recording keyboard to change a default key\&. 
.SS "void \fBAmiga::on_runConfigButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Run FS-UAE\&. 
.SS "void \fBAmiga::on_saveConfigToolButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Save configuration\&. 
.SS "void \fBAmiga::on_scaleXDoubleSpinBox_valueChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change X-scale\&. 
.SS "void \fBAmiga::on_scaleYDoubleSpinBox_valueChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change Y-scale\&. 
.SS "void \fBAmiga::on_scanlinesDarkHorizontalSlider_valueChanged\fP (intposition)\fC [private, slot]\fP"
.PP
Change scanlines dark\&. 
.SS "void \fBAmiga::on_scanlinesLightHorizontalSlider_valueChanged\fP (intposition)\fC [private, slot]\fP"
.PP
Change scanline light\&. 
.SS "void \fBAmiga::on_scanlinesRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Enable scanlines\&. 
.SS "void \fBAmiga::on_scanlinesRTGRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Enable RTG scanlines\&. 
.SS "void \fBAmiga::on_serverIPLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Insert an IP address\&. 
.SS "void \fBAmiga::on_serverPortLineEdit_textChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Insert a Internet port\&. 
.SS "void \fBAmiga::on_shaderComboBox_currentIndexChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
A list of type of shader\&. 
.SS "void \fBAmiga::on_slowMem1_8MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Slow memory setting at 1\&.8Mb\&. 
.SS "void \fBAmiga::on_slowMem1MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Slow memory setting at 1Mb\&. 
.SS "void \fBAmiga::on_slowMem512KbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Slow memory setting at 512kb\&. 
.SS "void \fBAmiga::on_slowMemNoneRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
None slow memory\&. 
.SS "void \fBAmiga::on_textureFilterLinearRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Apply a linear filter on the texture\&. 
.SS "void \fBAmiga::on_textureFilterNearestRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Apply a nearest filter on the texture\&. 
.SS "void \fBAmiga::on_textureFormatModeRGB8RadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting video texture as RGB8\&. 
.SS "void \fBAmiga::on_textureFormatModeRGBA8RadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting vide texture as RGBA8\&. 
.SS "void \fBAmiga::on_textureFormatModeRGBARadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting video texture as RGBA\&. 
.SS "void \fBAmiga::on_textureFormatModeRGBRadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting video texture as RGB\&. 
.SS "void \fBAmiga::on_themeAddViewportPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Add a new viewport\&. 
.SS "void \fBAmiga::on_themeFolderPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Change the theme folder\&. 
.SS "void \fBAmiga::on_themeOverlayImagerPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Change the theme overlay image\&. 
.SS "void \fBAmiga::on_themeRemoveViewportPushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Report a viewport\&. 
.SS "void \fBAmiga::on_useBSDCheckBox_clicked\fP ()\fC [private, slot]\fP"
.PP
Enable BSD\&. 
.SS "void \fBAmiga::on_videoFormatBGRARadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting video format as BRGA\&. 
.SS "void \fBAmiga::on_videoFormatRGBARadioButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Setting video format as RBGA\&. 
.SS "void \fBAmiga::on_videoModeNTSCRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Switch to NTST video mode\&. 
.SS "void \fBAmiga::on_videoModePALRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Switch to PAL video mode\&. 
.SS "void \fBAmiga::on_videoSyncComboBox_currentIndexChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
A list of type of video syncronization\&. 
.SS "void \fBAmiga::on_videoSynkMethodeComboBox_currentIndexChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
A list of method of video syncronization\&. 
.SS "void \fBAmiga::on_wallColor1PushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Chaneg the first wall color\&. 
.SS "void \fBAmiga::on_wallColor2PushButton_clicked\fP ()\fC [private, slot]\fP"
.PP
Change the second wall color\&. 
.SS "void \fBAmiga::on_windowResolutionXSpinBox_valueChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change X-resolution in window mode\&. 
.SS "void \fBAmiga::on_windowResolutionYSpinBox_valueChanged\fP (const QString &arg1)\fC [private, slot]\fP"
.PP
Change Y-resolution in window mode\&. 
.SS "void \fBAmiga::on_z3Mem128MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Zorro III memory setting at 128Mb\&. 
.SS "void \fBAmiga::on_z3Mem16MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Zorro III memory setting at 16Mb\&. 
.SS "void \fBAmiga::on_z3Mem1MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Zorro III memory setting at 1Mb\&. 
.SS "void \fBAmiga::on_z3Mem256MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Zorro III memory setting at 256Mb\&. 
.SS "void \fBAmiga::on_z3Mem2MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Zorro III memory setting at 2Mb\&. 
.SS "void \fBAmiga::on_z3Mem32MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Zorro III memory setting at 32Mb\&. 
.SS "void \fBAmiga::on_z3Mem4MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Zorro III memory setting at 4Mb\&. 
.SS "void \fBAmiga::on_z3Mem64MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Zorro III memory setting at 64Mb\&. 
.SS "void \fBAmiga::on_z3Mem8MbRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
Zorro III memory setting at 8Mb\&. 
.SS "void \fBAmiga::on_z3MemNoneRadio_clicked\fP ()\fC [private, slot]\fP"
.PP
None Zorro III memory\&. 
.SS "void \fBAmiga::parseLine\fP (stringline)\fC [private]\fP"
.SS "void \fBAmiga::saveConfigInFile\fP (stringfileName)\fC [private]\fP"
.SS "void \fBAmiga::setFastMemoryDisabled\fP (boolstate)\fC [private]\fP"
.SS "void \fBAmiga::setZorroIIIMemoryDisabled\fP (boolstate)\fC [private]\fP"
.SS "void \fBAmiga::updateGraphicsFromInternalConfiguration\fP ()\fC [private]\fP"
.SH "Member Data Documentation"
.PP 
.SS "\fBConfigCDRom\fP \fBAmiga::cdromConfiguration\fP\fC [private]\fP"
.PP
CDROM configuraion tab\&. 
.SS "\fBConfigChipset\fP \fBAmiga::chipsetConfiguration\fP\fC [private]\fP"
.PP
Chipset configuration tab\&. 
.SS "\fBConfigFloppy\fP \fBAmiga::floppyConfiguration\fP\fC [private]\fP"
.PP
Floppy configuration tab\&. 
.SS "\fBConfigGraphics\fP \fBAmiga::graphicsConfiguration\fP\fC [private]\fP"
.PP
Graphics configuration tab\&. 
.SS "\fBConfigHardDisks\fP \fBAmiga::hardDiskConfiguration\fP\fC [private]\fP"
.PP
Hard Disks configuration tab\&. 
.SS "\fBConfigInput\fP \fBAmiga::inputConfiguration\fP\fC [private]\fP"
.PP
Input configuration tab\&. 
.SS "\fBConfigMisc\fP \fBAmiga::miscConfiguration\fP\fC [private]\fP"
.PP
Misc configuration tab\&. 
.SS "\fBConfigRam\fP \fBAmiga::ramConfiguration\fP\fC [private]\fP"
.PP
RAM configuration tab\&. 
.SS "\fBConfigTheme\fP \fBAmiga::themeConfiguration\fP\fC [private]\fP"
.PP
Theme configuration tab\&. 
.SS "Ui::Amiga* \fBAmiga::ui\fP\fC [private]\fP"
.PP
\fBAmiga\fP main window\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for FS-UAE Gui for Linux OS from the source code\&.
